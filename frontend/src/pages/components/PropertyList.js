"use client";
import * as React from "react";
import { PropertyCard } from "./PropertyCard";

const properties = [
    {
        id: 1,
        title: "Luxury apartments for sale in Alanya Turkey with reasonable prices",
        description: "Apartment for sale in Alanya from real estate agent,for more properties see our portfolio",
        location: "Alanya",
        bedrooms: 3,
        bathrooms: 1,
        area: "52m",
        price: "67,500 €",
        imageUrl: "/caria-images/31097191f18103f96727cd88ea3d8eb1a0bda838.png",
    },
    {
        id: 2,
        title: "Luxury apartments for sale in Alanya Turkey with reasonable prices",
        description: "Apartment for sale in Alanya from real estate agent,for more properties see our portfolio",
        location: "Alanya",
        bedrooms: 3,
        bathrooms: 1,
        area: "52m",
        price: "67,500 €",
        imageUrl: "/caria-images/31097191f18103f96727cd88ea3d8eb1a0bda838.png",
    },
    {
        id: 3,
        title: "Luxury apartments for sale in Alanya Turkey with reasonable prices",
        description: "Apartment for sale in Alanya from real estate agent,for more properties see our portfolio",
        location: "Alanya",
        bedrooms: 3,
        bathrooms: 1,
        area: "52m",
        price: "67,500 €",
        imageUrl: "/caria-images/31097191f18103f96727cd88ea3d8eb1a0bda838.png",
    },
];

const StarIcon = () => (
    <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M15.3084 13.2917L18.7918 10.3125L19.3876 10.3583C19.6473 10.3889 19.8499 10.4958 19.9953 10.6792C20.1408 10.8625 20.2132 11.0611 20.2126 11.275C20.2126 11.3972 20.1897 11.5194 20.1438 11.6417C20.098 11.7639 20.014 11.8708 19.8918 11.9625L17.5084 14.0479L18.2188 17.1417C18.2341 17.1722 18.2418 17.2067 18.2418 17.2452V17.3479C18.2418 17.6076 18.1501 17.8255 17.9668 18.0015C17.7834 18.1775 17.5695 18.2652 17.3251 18.2646C17.2487 18.2646 17.1687 18.253 17.0849 18.2297C17.0012 18.2065 16.9208 18.1723 16.8438 18.1271L16.3626 17.8292L15.3084 13.2917ZM13.1543 6.59999L12.1918 4.35416L12.398 3.84999C12.4744 3.66666 12.5927 3.52519 12.7528 3.42557C12.9129 3.32596 13.0773 3.27646 13.2459 3.27707C13.4146 3.27769 13.579 3.32352 13.7391 3.41457C13.8992 3.50563 14.0175 3.64313 14.0938 3.82707L15.3543 6.80624L13.1543 6.59999ZM4.44593 17.1417L5.45426 12.8104L2.08551 9.89999C1.96329 9.80832 1.88324 9.70138 1.84535 9.57916C1.80746 9.45694 1.78821 9.33471 1.7876 9.21249C1.7876 8.9986 1.86032 8.79999 2.00576 8.61666C2.15121 8.43332 2.35349 8.32638 2.6126 8.29583L7.05843 7.90624L8.77718 3.82707C8.85357 3.64374 8.97213 3.50624 9.13285 3.41457C9.29357 3.32291 9.45765 3.27707 9.6251 3.27707C9.79254 3.27707 9.95693 3.32291 10.1183 3.41457C10.2796 3.50624 10.3978 3.64374 10.473 3.82707L12.1918 7.90624L16.6376 8.29583C16.8973 8.32638 17.0999 8.43332 17.2453 8.61666C17.3908 8.79999 17.4632 8.9986 17.4626 9.21249C17.4626 9.33471 17.4437 9.45694 17.4058 9.57916C17.3679 9.70138 17.2875 9.80832 17.1647 9.89999L13.7959 12.8104L14.8043 17.1417C14.8195 17.1875 14.8272 17.2562 14.8272 17.3479C14.8272 17.6076 14.7355 17.8255 14.5522 18.0015C14.3688 18.1775 14.155 18.2652 13.9105 18.2646C13.8647 18.2646 13.7043 18.2187 13.4293 18.1271L9.6251 15.8354L5.82093 18.1271C5.74454 18.1729 5.66449 18.2074 5.58076 18.2307C5.49704 18.2539 5.41668 18.2652 5.33968 18.2646C5.06468 18.2646 4.82788 18.1537 4.62926 17.9318C4.43065 17.71 4.36954 17.4466 4.44593 17.1417Z" fill="#104FA1"/>
    </svg>
);

const ListUpIcon = () => (
    <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M2.0625 5.5C2.0625 5.31766 2.13493 5.1428 2.26386 5.01386C2.3928 4.88493 2.56766 4.8125 2.75 4.8125H19.25C19.4323 4.8125 19.6072 4.88493 19.7361 5.01386C19.8651 5.1428 19.9375 5.31766 19.9375 5.5C19.9375 5.68234 19.8651 5.8572 19.7361 5.98614C19.6072 6.11507 19.4323 6.1875 19.25 6.1875H2.75C2.56766 6.1875 2.3928 6.11507 2.26386 5.98614C2.13493 5.8572 2.0625 5.68234 2.0625 5.5ZM2.0625 9.16667C2.0625 8.98433 2.13493 8.80946 2.26386 8.68053C2.3928 8.5516 2.56766 8.47917 2.75 8.47917H19.25C19.4323 8.47917 19.6072 8.5516 19.7361 8.68053C19.8651 8.80946 19.9375 8.98433 19.9375 9.16667C19.9375 9.349 19.8651 9.52387 19.7361 9.6528C19.6072 9.78173 19.4323 9.85417 19.25 9.85417H2.75C2.56766 9.85417 2.3928 9.78173 2.26386 9.6528C2.13493 9.52387 2.0625 9.349 2.0625 9.16667ZM2.0625 12.8333C2.0625 12.651 2.13493 12.4761 2.26386 12.3472C2.3928 12.2183 2.56766 12.1458 2.75 12.1458H10.0833C10.2657 12.1458 10.4405 12.2183 10.5695 12.3472C10.6984 12.4761 10.7708 12.651 10.7708 12.8333C10.7708 13.0157 10.6984 13.1905 10.5695 13.3195C10.4405 13.4484 10.2657 13.5208 10.0833 13.5208H2.75C2.56766 13.5208 2.3928 13.4484 2.26386 13.3195C2.13493 13.1905 2.0625 13.0157 2.0625 12.8333ZM15.5943 13.2275C15.7189 13.1207 15.8776 13.0621 16.0417 13.0621C16.2057 13.0621 16.3644 13.1207 16.489 13.2275L19.6973 15.9775C19.7659 16.0362 19.8223 16.1079 19.8632 16.1885C19.9041 16.269 19.9288 16.3568 19.9358 16.4468C19.9428 16.5369 19.9319 16.6275 19.9039 16.7133C19.8759 16.7992 19.8312 16.8787 19.7725 16.9473C19.7138 17.016 19.6421 17.0723 19.5615 17.1132C19.481 17.1541 19.3932 17.1788 19.3032 17.1858C19.2131 17.1928 19.1225 17.1819 19.0367 17.1539C18.9508 17.1259 18.8713 17.0812 18.8027 17.0225L16.0417 14.6548L13.2807 17.0207C13.2127 17.0829 13.1329 17.1309 13.046 17.1616C12.9592 17.1924 12.867 17.2054 12.775 17.1999C12.683 17.1943 12.593 17.1704 12.5105 17.1294C12.428 17.0884 12.3545 17.0312 12.2945 16.9612C12.2345 16.8912 12.1892 16.8099 12.1612 16.7221C12.1333 16.6343 12.1233 16.5417 12.1318 16.45C12.1404 16.3582 12.1673 16.2691 12.2109 16.1879C12.2546 16.1068 12.3141 16.0352 12.386 15.9775L15.5943 13.2275ZM2.0625 16.5C2.0625 16.3177 2.13493 16.1428 2.26386 16.0139C2.3928 15.8849 2.56766 15.8125 2.75 15.8125H10.0833C10.2657 15.8125 10.4405 15.8849 10.5695 16.0139C10.6984 16.1428 10.7708 16.3177 10.7708 16.5C10.7708 16.6823 10.6984 16.8572 10.5695 16.9861C10.4405 17.1151 10.2657 17.1875 10.0833 17.1875H2.75C2.56766 17.1875 2.3928 17.1151 2.26386 16.9861C2.13493 16.8572 2.0625 16.6823 2.0625 16.5Z" fill="#4D4D4D"/>
    </svg>
);

const ListDownIcon = () => (
    <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M2.0625 5.5C2.0625 5.31766 2.13493 5.1428 2.26386 5.01386C2.3928 4.88493 2.56766 4.8125 2.75 4.8125H19.25C19.4323 4.8125 19.6072 4.88493 19.7361 5.01386C19.8651 5.1428 19.9375 5.31766 19.9375 5.5C19.9375 5.68234 19.8651 5.8572 19.7361 5.98614C19.6072 6.11507 19.4323 6.1875 19.25 6.1875H2.75C2.56766 6.1875 2.3928 6.11507 2.26386 5.98614C2.13493 5.8572 2.0625 5.68234 2.0625 5.5ZM2.0625 9.16667C2.0625 8.98433 2.13493 8.80946 2.26386 8.68053C2.3928 8.5516 2.56766 8.47917 2.75 8.47917H19.25C19.4323 8.47917 19.6072 8.5516 19.7361 8.68053C19.8651 8.80946 19.9375 8.98433 19.9375 9.16667C19.9375 9.349 19.8651 9.52387 19.7361 9.6528C19.6072 9.78173 19.4323 9.85417 19.25 9.85417H2.75C2.56766 9.85417 2.3928 9.78173 2.26386 9.6528C2.13493 9.52387 2.0625 9.349 2.0625 9.16667ZM2.0625 12.8333C2.0625 12.651 2.13493 12.4761 2.26386 12.3472C2.3928 12.2183 2.56766 12.1458 2.75 12.1458H9.16667C9.349 12.1458 9.52387 12.2183 9.6528 12.3472C9.78173 12.4761 9.85417 12.651 9.85417 12.8333C9.85417 13.0157 9.78173 13.1905 9.6528 13.3195C9.52387 13.4484 9.349 13.5208 9.16667 13.5208H2.75C2.56766 13.5208 2.3928 13.4484 2.26386 13.3195C2.13493 13.1905 2.0625 13.0157 2.0625 12.8333ZM12.3108 13.3027C12.3696 13.2341 12.4413 13.1777 12.5219 13.1369C12.6025 13.096 12.6903 13.0715 12.7804 13.0646C12.8704 13.0577 12.961 13.0686 13.0468 13.0967C13.1327 13.1248 13.2121 13.1696 13.2807 13.2284L16.0417 15.5943L18.8027 13.2284C18.8706 13.1662 18.9504 13.1182 19.0373 13.0874C19.1242 13.0567 19.2163 13.0436 19.3083 13.0492C19.4003 13.0547 19.4903 13.0787 19.5728 13.1197C19.6554 13.1607 19.7288 13.2179 19.7888 13.2879C19.8488 13.3578 19.8942 13.4391 19.9221 13.527C19.9501 13.6148 19.9601 13.7073 19.9515 13.7991C19.943 13.8909 19.9161 13.98 19.8724 14.0612C19.8287 14.1423 19.7692 14.2139 19.6973 14.2716L16.489 17.0216C16.3644 17.1283 16.2057 17.187 16.0417 17.187C15.8776 17.187 15.7189 17.1283 15.5943 17.0216L12.386 14.2716C12.2478 14.1529 12.1623 13.9842 12.1484 13.8025C12.1344 13.6208 12.1923 13.441 12.3108 13.3027ZM2.0625 16.5C2.0625 16.3177 2.13493 16.1428 2.26386 16.0139C2.3928 15.8849 2.56766 15.8125 2.75 15.8125H9.16667C9.349 15.8125 9.52387 15.8849 9.6528 16.0139C9.78173 16.1428 9.85417 16.3177 9.85417 16.5C9.85417 16.6823 9.78173 16.8572 9.6528 16.9861C9.52387 17.1151 9.349 17.1875 9.16667 17.1875H2.75C2.56766 17.1875 2.3928 17.1151 2.26386 16.9861C2.13493 16.8572 2.0625 16.6823 2.0625 16.5Z" fill="#4D4D4D"/>
    </svg>
);

export const PropertyList: React.FC = () => {
    const [sortBy, setSortBy] = React.useState('popular');

    const handleSortChange = (sortType: string) => {
        setSortBy(sortType);
        console.log('Sorting by:', sortType);
    };

    return (
        <section className="flex flex-col gap-3.5 w-[927px] max-md:order-1 max-md:w-full">
            <header className="box-border relative px-5 py-2.5 bg-white rounded-xl border border-solid border-zinc-100 h-[106px]">
                <h1 className="absolute top-2.5 left-5 text-2xl text-zinc-900">
                    International Property Search
                </h1>
                <p className="absolute left-5 text-sm text-neutral-600 top-[46px]">
                    21 Results Found
                </p>

                <div className="flex absolute gap-4 items-center right-[46px] top-[66px]">
                    <button
                        onClick={() => handleSortChange('popular')}
                        className={`flex gap-1.5 items-center px-2.5 py-1.5 rounded-xl cursor-pointer transition-colors ${
                            sortBy === 'popular' ? 'bg-blue-50' : 'hover:bg-gray-50'
                        }`}
                    >
                        <StarIcon />
                        <span className={`text-sm ${sortBy === 'popular' ? 'text-blue-800' : 'text-neutral-600'}`}>
              Most Popular
            </span>
                    </button>

                    <button
                        onClick={() => handleSortChange('price-asc')}
                        className={`flex gap-1.5 items-center px-2.5 py-1.5 rounded-xl cursor-pointer transition-colors ${
                            sortBy === 'price-asc' ? 'bg-blue-50' : 'hover:bg-gray-50'
                        }`}
                    >
                        <ListUpIcon />
                        <span className={`text-sm ${sortBy === 'price-asc' ? 'text-blue-800' : 'text-neutral-600'}`}>
              Increasing by price
            </span>
                    </button>

                    <button
                        onClick={() => handleSortChange('price-desc')}
                        className={`flex gap-1.5 items-center px-2.5 py-1.5 rounded-xl cursor-pointer transition-colors ${
                            sortBy === 'price-desc' ? 'bg-blue-50' : 'hover:bg-gray-50'
                        }`}
                    >
                        <ListDownIcon />
                        <span className={`text-sm ${sortBy === 'price-desc' ? 'text-blue-800' : 'text-neutral-600'}`}>
              Decreasing by price
            </span>
                    </button>
                </div>
            </header>

            <div className="flex flex-col gap-4">
                {properties.map((property) => (
                    <PropertyCard
                        key={property.id}
                        title={property.title}
                        description={property.description}
                        location={property.location}
                        bedrooms={property.bedrooms}
                        bathrooms={property.bathrooms}
                        area={property.area}
                        price={property.price}
                        imageUrl={property.imageUrl}
                    />
                ))}
            </div>
        </section>
    );
};
